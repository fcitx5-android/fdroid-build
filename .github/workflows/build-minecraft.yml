name: Build and deploy minecraft

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Dict version"
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout scripts
        uses: actions/checkout@v4
      - name: Checkout plugin-scaffold
        uses: actions/checkout@v4
        with:
          path: plugin-scaffold
          repository: fcitx5-android/plugin-scaffold
      - uses: cachix/install-nix-action@v23
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v14
        with:
            name: fcitx5-android
            authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build Release APK
        env:
          MINECRAFT_VER: ${{ inputs.version }}
        working-directory: plugin-scaffold
        run: ${GITHUB_WORKSPACE}/scripts/build-minecraft.sh

      - name: Sign APK
        id: sign
        env:
          SIGN_KEY_BASE64: "${{ secrets.SIGN_KEY_BASE64 }}"
          SIGN_KEY_ALIAS: "${{ secrets.SIGN_KEY_ALIAS }}"
          SIGN_KEY_PWD: "${{ secrets.SIGN_KEY_PWD }}"
        working-directory: plugin-scaffold
        run: nix develop ./out#noAS --command ${GITHUB_WORKSPACE}/scripts/sign-apk.sh ./out/*.apk

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: minecraft
          path: "${{ steps.sign.outputs.signed_path }}"

      - name: Deploy apk
        uses: burnett01/rsync-deployments@7.0.1
        with:
          switches: -avzr --delete
          path: "${{ steps.sign.outputs.signed_path }}"
          remote_path: "${{ steps.sign.outputs.remote_path }}"
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_port: ${{ secrets.DEPLOY_PORT }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_key: ${{ secrets.DEPLOY_KEY }}

      - name: Update repo
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh workflow run update-repo.yml -f reason="minecraft updated to ${{ inputs.version }}" --repo ${{ github.repository }}
